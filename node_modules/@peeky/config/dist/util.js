import { isObject } from '@peeky/utils';
const mergedArrays = [
    'buildInclude',
];
export function mergeConfig(a, b) {
    const merged = { ...a };
    for (const key in b) {
        const value = b[key];
        if (value == null) {
            continue;
        }
        const existing = merged[key];
        if (Array.isArray(existing) && Array.isArray(value) && mergedArrays.includes(key)) {
            // @ts-ignore
            merged[key] = [...existing, ...value];
            continue;
        }
        if (isObject(existing) && isObject(value)) {
            merged[key] = mergeConfig(existing, value);
            continue;
        }
        merged[key] = value;
    }
    return merged;
}
export function toSerializableConfig(config) {
    const result = toProgramConfig(config);
    delete result.vite;
    return result;
}
export function toProgramConfig(config) {
    const result = { ...config };
    if (typeof result.runtimeEnv !== 'string') {
        delete result.runtimeEnv;
    }
    delete result.runtimeAvailableEnvs;
    delete result.buildInclude;
    delete result.buildExclude;
    return result;
}
