import Tinypool from 'tinypool';
import { Awaited } from '@peeky/utils';
import { ProgramPeekyConfig } from '@peeky/config';
import type { ReporterTestSuite, Reporter } from './types';
export interface RunnerOptions {
    config: ProgramPeekyConfig;
    reporters: Reporter[];
}
export declare function setupRunner(options: RunnerOptions): Promise<{
    runTestFile: (relativePath: string, clearDeps?: string[], updateSnapshots?: boolean) => Promise<{
        filePath: string;
        suites: ReporterTestSuite[];
        duration: number;
        failedSnapshots: import("./index.js").Snapshot[];
        newSnapshots: import("./index.js").Snapshot[];
        passedSnapshots: import("./index.js").Snapshot[];
        env: {
            name: string;
        };
    } & {
        deps: string[];
    }>;
    close: () => Promise<void>;
    onMessage: (handler: import("./message.js").WorkerMessageHandler) => void;
    clearOnMessage: () => void;
    pool: Tinypool;
    viteServer: import("vite").ViteDevServer;
}>;
export declare type Runner = Awaited<ReturnType<typeof setupRunner>>;
export declare type RunTestFileResult = Awaited<ReturnType<Runner['runTestFile']>>;
